export default function BudgetAnalysisTable({ categories = [] }) {
  const fm = (n) =>
    typeof n === "number"
      ? n.toLocaleString(undefined, {
          minimumFractionDigits: 2,
          maximumFractionDigits: 2,
        })
      : "0.00";

  return (
    <div className="mt-4 rounded-2xl bg-white p-4 shadow ring-1 ring-black/5">
      <h3 className="mb-3 text-sm font-semibold text-gray-900">
        Budget Analysis
      </h3>

      <div className="overflow-x-auto">
        <table className="min-w-full border-separate border-spacing-y-0">
          <thead>
            <tr className="text-left text-xs text-gray-500">
              <th className="px-3 py-2 font-medium">Category</th>
              <th className="px-3 py-2 font-medium">Budget</th>
              <th className="px-3 py-2 font-medium">Spending</th>
              <th className="px-3 py-2 font-medium">Status</th>
            </tr>
          </thead>
          <tbody className="text-sm text-gray-800">
            {categories.map((c, idx) => {
              const ratio = c.limit > 0 ? (c.spent / c.limit) : 0;
              const pct = c.limit > 0 ? Math.min(100, ratio * 100) : 0;
              const status = c.limit <= 0 ? 'No Budget' : (ratio < 0.8 ? 'On Track' : (ratio <= 1 ? 'At Risk' : 'Over'));
              const badge = status === 'On Track'
                ? 'bg-emerald-50 text-emerald-700 ring-emerald-200'
                : status === 'At Risk'
                  ? 'bg-amber-50 text-amber-700 ring-amber-200'
                  : status === 'Over'
                    ? 'bg-rose-50 text-rose-700 ring-rose-200'
                    : 'bg-gray-50 text-gray-600 ring-gray-200';
              return (
                <tr key={c.id || idx} className="border-t border-gray-200">
                  <td className="px-3 py-3">
                    <div className="flex items-center gap-3">
                      <div className="flex h-7 w-7 items-center justify-center rounded-full bg-gray-100">
                        ðŸ’¡
                      </div>
                      <div>
                        <div className="font-medium">{c.name}</div>
                        <div className="text-xs text-gray-500">
                          {c.txCount || 0} transactions
                        </div>
                      </div>
                    </div>
                  </td>
                  <td className="px-3 py-3">${fm(c.limit)}</td>
                  <td className="px-3 py-3">${fm(c.spent)}</td>
                  <td className="px-3 py-3">
                    <span className={"inline-flex items-center gap-1 rounded-full px-2.5 py-1 text-xs font-medium ring-1 " + badge}>
                      {status}
                    </span>
                  </td>
                </tr>
              );
            })}
            {categories.length === 0 && (
              <tr>
                <td className="px-3 py-4 text-gray-500" colSpan={4}>
                  No category budgets yet.
                </td>
              </tr>
            )}
          </tbody>
        </table>
      </div>
    </div>
  );
}

